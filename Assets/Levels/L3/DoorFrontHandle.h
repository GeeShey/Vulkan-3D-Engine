// "DoorFrontHandle.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "DoorFrontHandle.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _DoorFrontHandle_version_
const char DoorFrontHandle_version[4] = { '0','1','9','d' };
#define _DoorFrontHandle_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _DoorFrontHandle_vertexcount_
const unsigned DoorFrontHandle_vertexcount = 263;
#define _DoorFrontHandle_vertexcount_
#endif
#ifndef _DoorFrontHandle_indexcount_
const unsigned DoorFrontHandle_indexcount = 1098;
#define _DoorFrontHandle_indexcount_
#endif
#ifndef _DoorFrontHandle_materialcount_
const unsigned DoorFrontHandle_materialcount = 1; // can be used for batched draws
#define _DoorFrontHandle_materialcount_
#endif
#ifndef _DoorFrontHandle_meshcount_
const unsigned DoorFrontHandle_meshcount = 1;
#define _DoorFrontHandle_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _DoorFrontHandle_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT DoorFrontHandle_vertices[263] =
{
	{	{ -0.670355f, -0.016854f, -0.031141f },	{ 0.644565f, 0.453380f, 0.000000f },	{ 0.665700f, -0.285500f, 0.689400f }	},
	{	{ -0.670355f, -0.017846f, -0.031804f },	{ 0.694986f, 0.496597f, 0.000000f },	{ 0.665700f, -0.527600f, 0.527600f }	},
	{	{ -0.670355f, -0.017403f, -0.032247f },	{ 0.663841f, 0.506044f, 0.000000f },	{ 0.753700f, 0.464600f, -0.464700f }	},
	{	{ -0.670355f, -0.012627f, -0.033966f },	{ 0.363778f, 0.488951f, 0.000000f },	{ 0.665700f, 0.746200f, -0.000000f }	},
	{	{ -0.670355f, -0.012860f, -0.032796f },	{ 0.391069f, 0.447527f, 0.000000f },	{ 0.665700f, 0.689400f, 0.285500f }	},
	{	{ -0.670355f, -0.013439f, -0.033036f },	{ 0.422213f, 0.467032f, 0.000000f },	{ 0.753700f, -0.607100f, -0.251500f }	},
	{	{ -0.670355f, -0.013965f, -0.035684f },	{ 0.422211f, 0.579342f, 0.000000f },	{ 0.753700f, -0.464700f, 0.464600f }	},
	{	{ -0.670355f, -0.013522f, -0.036127f },	{ 0.391067f, 0.588791f, 0.000000f },	{ 0.665700f, 0.527600f, -0.527600f }	},
	{	{ -0.670355f, -0.012860f, -0.035136f },	{ 0.363778f, 0.538557f, 0.000000f },	{ 0.665700f, 0.689400f, -0.285600f }	},
	{	{ -0.670355f, -0.015684f, -0.036396f },	{ 0.514678f, 0.637248f, 0.000000f },	{ 0.753700f, 0.000000f, 0.657100f }	},
	{	{ -0.670355f, -0.015684f, -0.037023f },	{ 0.507370f, 0.661624f, 0.000000f },	{ 0.665700f, 0.000000f, -0.746200f }	},
	{	{ -0.670355f, -0.014514f, -0.036790f },	{ 0.441490f, 0.632006f, 0.000000f },	{ 0.665700f, 0.285600f, -0.689400f }	},
	{	{ -0.670355f, -0.017846f, -0.036127f },	{ 0.644558f, 0.664788f, 0.000000f },	{ 0.665700f, -0.527600f, -0.527700f }	},
	{	{ -0.670355f, -0.016854f, -0.036790f },	{ 0.578678f, 0.673135f, 0.000000f },	{ 0.665700f, -0.285500f, -0.689400f }	},
	{	{ -0.670355f, -0.016614f, -0.036211f },	{ 0.571371f, 0.646401f, 0.000000f },	{ 0.753700f, 0.251500f, 0.607100f }	},
	{	{ -0.670355f, -0.018115f, -0.033966f },	{ 0.685533f, 0.585418f, 0.000000f },	{ 0.753700f, 0.657100f, -0.000000f }	},
	{	{ -0.670355f, -0.018741f, -0.033966f },	{ 0.722269f, 0.596433f, 0.000000f },	{ 0.665700f, -0.746200f, -0.000000f }	},
	{	{ -0.670355f, -0.018508f, -0.035136f },	{ 0.694980f, 0.637854f, 0.000000f },	{ 0.665700f, -0.689400f, -0.285500f }	},
	{	{ -0.670355f, -0.014754f, -0.031720f },	{ 0.514683f, 0.438982f, 0.000000f },	{ 0.753700f, -0.251500f, -0.607100f }	},
	{	{ -0.670355f, -0.014514f, -0.031141f },	{ 0.507376f, 0.412247f, 0.000000f },	{ 0.665700f, 0.285500f, 0.689400f }	},
	{	{ -0.670355f, -0.015684f, -0.030909f },	{ 0.578685f, 0.423760f, 0.000000f },	{ 0.665700f, 0.000000f, 0.746200f }	},
	{	{ -0.670355f, -0.018508f, -0.032796f },	{ 0.722271f, 0.546830f, 0.000000f },	{ 0.665700f, -0.689400f, 0.285500f }	},
	{	{ -0.670355f, -0.017930f, -0.033036f },	{ 0.685535f, 0.545982f, 0.000000f },	{ 0.753700f, 0.607100f, -0.251500f }	},
	{	{ -0.670355f, -0.013522f, -0.031804f },	{ 0.441494f, 0.420592f, 0.000000f },	{ 0.665700f, 0.527600f, 0.527600f }	},
	{	{ -0.670355f, -0.016614f, -0.031720f },	{ 0.623754f, 0.471685f, 0.000000f },	{ 0.753700f, 0.251500f, -0.607100f }	},
	{	{ -0.670355f, -0.013439f, -0.034896f },	{ 0.400516f, 0.539404f, 0.000000f },	{ 0.753700f, -0.607100f, 0.251500f }	},
	{	{ -0.670355f, -0.014754f, -0.036211f },	{ 0.462300f, 0.613701f, 0.000000f },	{ 0.753700f, -0.251500f, 0.607100f }	},
	{	{ -0.670355f, -0.017930f, -0.034896f },	{ 0.663837f, 0.618351f, 0.000000f },	{ 0.753700f, 0.607100f, 0.251500f }	},
	{	{ -0.670355f, -0.013965f, -0.032247f },	{ 0.462303f, 0.445617f, 0.000000f },	{ 0.753700f, -0.464600f, -0.464600f }	},
	{	{ -0.670845f, -0.015684f, -0.031535f },	{ 0.621350f, 0.937969f, 0.000000f },	{ -0.353100f, 0.000000f, -0.935500f }	},
	{	{ -0.671063f, -0.015684f, -0.031355f },	{ 0.619319f, 0.948985f, 0.000000f },	{ -0.907700f, 0.000000f, -0.419500f }	},
	{	{ -0.671063f, -0.014685f, -0.031554f },	{ 0.559609f, 0.933833f, 0.000000f },	{ -0.907700f, -0.160400f, -0.387600f }	},
	{	{ -0.670845f, -0.012627f, -0.033966f },	{ 0.413841f, 0.874290f, 0.000000f },	{ -0.336000f, 0.941800f, -0.000000f }	},
	{	{ -0.670845f, -0.012860f, -0.035136f },	{ 0.395372f, 0.837374f, 0.000000f },	{ -0.336000f, 0.870100f, -0.360500f }	},
	{	{ -0.671081f, -0.013048f, -0.035057f },	{ 0.406573f, 0.830268f, 0.000000f },	{ -0.904500f, 0.393900f, -0.163200f }	},
	{	{ -0.670845f, -0.016854f, -0.031141f },	{ 0.685021f, 0.979774f, 0.000000f },	{ -0.336000f, -0.360400f, 0.870100f }	},
	{	{ -0.670845f, -0.015684f, -0.030909f },	{ 0.615283f, 0.970643f, 0.000000f },	{ -0.336000f, 0.000000f, 0.941800f }	},
	{	{ -0.671081f, -0.015684f, -0.031113f },	{ 0.617577f, 0.958366f, 0.000000f },	{ -0.904500f, 0.000000f, 0.426500f }	},
	{	{ -0.670845f, -0.017403f, -0.035684f },	{ 0.890037f, 0.839411f, 0.000000f },	{ -0.353200f, 0.661500f, 0.661500f }	},
	{	{ -0.670845f, -0.016614f, -0.036211f },	{ 0.917675f, 0.783301f, 0.000000f },	{ -0.353100f, 0.358000f, 0.864300f }	},
	{	{ -0.671063f, -0.016683f, -0.036378f },	{ 0.929129f, 0.790814f, 0.000000f },	{ -0.907700f, 0.160600f, 0.387600f }	},
	{	{ -0.670845f, -0.013522f, -0.031804f },	{ 0.488509f, 0.931023f, 0.000000f },	{ -0.336000f, 0.665900f, 0.666000f }	},
	{	{ -0.670845f, -0.012860f, -0.032796f },	{ 0.443962f, 0.904247f, 0.000000f },	{ -0.336000f, 0.870100f, 0.360400f }	},
	{	{ -0.671081f, -0.013048f, -0.032874f },	{ 0.454650f, 0.895207f, 0.000000f },	{ -0.904500f, 0.393900f, 0.163200f }	},
	{	{ -0.670845f, -0.017846f, -0.031804f },	{ 0.749730f, 0.980206f, 0.000000f },	{ -0.336000f, -0.665900f, 0.666000f }	},
	{	{ -0.671081f, -0.017701f, -0.031949f },	{ 0.744695f, 0.966832f, 0.000000f },	{ -0.904500f, -0.301600f, 0.301600f }	},
	{	{ -0.671081f, -0.018320f, -0.032874f },	{ 0.796970f, 0.958127f, 0.000000f },	{ -0.904500f, -0.393900f, 0.163200f }	},
	{	{ -0.670845f, -0.014754f, -0.036211f },	{ 0.410300f, 0.727876f, 0.000000f },	{ -0.353100f, -0.358000f, 0.864300f }	},
	{	{ -0.671063f, -0.014685f, -0.036378f },	{ 0.400351f, 0.730056f, 0.000000f },	{ -0.907700f, -0.160500f, 0.387600f }	},
	{	{ -0.671063f, -0.015684f, -0.036576f },	{ 0.402993f, 0.677393f, 0.000000f },	{ -0.907700f, 0.000000f, 0.419500f }	},
	{	{ -0.670845f, -0.014514f, -0.031141f },	{ 0.547470f, 0.953903f, 0.000000f },	{ -0.336000f, 0.360400f, 0.870100f }	},
	{	{ -0.671081f, -0.014592f, -0.031330f },	{ 0.553675f, 0.942516f, 0.000000f },	{ -0.904500f, 0.163300f, 0.394000f }	},
	{	{ -0.670845f, -0.018508f, -0.035136f },	{ 0.884881f, 0.921564f, 0.000000f },	{ -0.336000f, -0.870100f, -0.360400f }	},
	{	{ -0.670845f, -0.018741f, -0.033966f },	{ 0.848014f, 0.953527f, 0.000000f },	{ -0.336000f, -0.941800f, -0.000000f }	},
	{	{ -0.671081f, -0.018537f, -0.033966f },	{ 0.839513f, 0.939832f, 0.000000f },	{ -0.904500f, -0.426500f, -0.000000f }	},
	{	{ -0.670845f, -0.013965f, -0.035684f },	{ 0.414993f, 0.774657f, 0.000000f },	{ -0.353200f, -0.661500f, 0.661500f }	},
	{	{ -0.670845f, -0.013439f, -0.034896f },	{ 0.426965f, 0.815525f, 0.000000f },	{ -0.353200f, -0.864300f, 0.358000f }	},
	{	{ -0.671063f, -0.013272f, -0.034965f },	{ 0.416554f, 0.822627f, 0.000000f },	{ -0.907700f, -0.387600f, 0.160500f }	},
	{	{ -0.670845f, -0.017846f, -0.036127f },	{ 0.919353f, 0.872717f, 0.000000f },	{ -0.336000f, -0.665900f, -0.666000f }	},
	{	{ -0.671081f, -0.017701f, -0.035983f },	{ 0.908404f, 0.861282f, 0.000000f },	{ -0.904500f, -0.301500f, -0.301600f }	},
	{	{ -0.671081f, -0.016776f, -0.036601f },	{ 0.938625f, 0.798452f, 0.000000f },	{ -0.904500f, -0.163200f, -0.394000f }	},
	{	{ -0.670845f, -0.017403f, -0.032247f },	{ 0.733824f, 0.943646f, 0.000000f },	{ -0.353200f, 0.661500f, -0.661600f }	},
	{	{ -0.671063f, -0.017530f, -0.032120f },	{ 0.738737f, 0.955693f, 0.000000f },	{ -0.907700f, 0.296500f, -0.296600f }	},
	{	{ -0.671063f, -0.016683f, -0.031554f },	{ 0.680903f, 0.956415f, 0.000000f },	{ -0.907700f, 0.160500f, -0.387600f }	},
	{	{ -0.670845f, -0.013254f, -0.033966f },	{ 0.447106f, 0.849502f, 0.000000f },	{ -0.353200f, -0.935500f, -0.000000f }	},
	{	{ -0.670845f, -0.013439f, -0.033036f },	{ 0.475654f, 0.878712f, 0.000000f },	{ -0.353100f, -0.864300f, -0.358000f }	},
	{	{ -0.671063f, -0.013272f, -0.032967f },	{ 0.465405f, 0.887357f, 0.000000f },	{ -0.907700f, -0.387700f, -0.160500f }	},
	{	{ -0.670845f, -0.015684f, -0.037023f },	{ 0.384026f, 0.674281f, 0.000000f },	{ -0.336000f, 0.000000f, -0.941800f }	},
	{	{ -0.671081f, -0.015684f, -0.036819f },	{ 0.394857f, 0.675842f, 0.000000f },	{ -0.904500f, 0.000000f, -0.426500f }	},
	{	{ -0.671081f, -0.014592f, -0.036601f },	{ 0.391695f, 0.732816f, 0.000000f },	{ -0.904500f, 0.163200f, -0.394000f }	},
	{	{ -0.670845f, -0.017930f, -0.033036f },	{ 0.781822f, 0.933482f, 0.000000f },	{ -0.353200f, 0.864300f, -0.358000f }	},
	{	{ -0.670845f, -0.018115f, -0.033966f },	{ 0.822455f, 0.913327f, 0.000000f },	{ -0.353100f, 0.935500f, -0.000000f }	},
	{	{ -0.671063f, -0.018295f, -0.033966f },	{ 0.831058f, 0.926550f, 0.000000f },	{ -0.907700f, 0.419500f, -0.000000f }	},
	{	{ -0.670845f, -0.014754f, -0.031720f },	{ 0.565256f, 0.923613f, 0.000000f },	{ -0.353100f, -0.358000f, -0.864300f }	},
	{	{ -0.671063f, -0.013838f, -0.032120f },	{ 0.506866f, 0.912883f, 0.000000f },	{ -0.907700f, -0.296600f, -0.296600f }	},
	{	{ -0.670355f, -0.016614f, -0.036211f },	{ 0.896281f, 0.774521f, 0.000000f },	{ 0.753700f, 0.251500f, 0.607100f }	},
	{	{ -0.670355f, -0.015684f, -0.036396f },	{ 0.917681f, 0.712281f, 0.000000f },	{ 0.753700f, 0.000000f, 0.657100f }	},
	{	{ -0.670845f, -0.015684f, -0.036396f },	{ 0.939255f, 0.719699f, 0.000000f },	{ -0.353100f, 0.000000f, 0.935500f }	},
	{	{ -0.670355f, -0.016854f, -0.031141f },	{ 0.683859f, 0.999872f, 0.000000f },	{ 0.665700f, -0.285500f, 0.689400f }	},
	{	{ -0.670355f, -0.012860f, -0.032796f },	{ 0.431860f, 0.919012f, 0.000000f },	{ 0.665700f, 0.689400f, 0.285500f }	},
	{	{ -0.670355f, -0.012627f, -0.033966f },	{ 0.398792f, 0.884607f, 0.000000f },	{ 0.665700f, 0.746200f, -0.000000f }	},
	{	{ -0.670355f, -0.017930f, -0.034896f },	{ 0.841574f, 0.867979f, 0.000000f },	{ 0.753700f, 0.607100f, 0.251500f }	},
	{	{ -0.670355f, -0.017403f, -0.035684f },	{ 0.870515f, 0.827809f, 0.000000f },	{ 0.753700f, 0.464600f, 0.464600f }	},
	{	{ -0.670355f, -0.012860f, -0.035136f },	{ 0.378597f, 0.843196f, 0.000000f },	{ 0.665700f, 0.689400f, -0.285600f }	},
	{	{ -0.670355f, -0.013522f, -0.036127f },	{ 0.367298f, 0.793150f, 0.000000f },	{ 0.665700f, 0.527600f, -0.527600f }	},
	{	{ -0.670845f, -0.013522f, -0.036127f },	{ 0.384547f, 0.790722f, 0.000000f },	{ -0.336000f, 0.665900f, -0.666000f }	},
	{	{ -0.670355f, -0.013965f, -0.032247f },	{ 0.524599f, 0.885939f, 0.000000f },	{ 0.753700f, -0.464600f, -0.464600f }	},
	{	{ -0.670355f, -0.014754f, -0.031720f },	{ 0.571267f, 0.905556f, 0.000000f },	{ 0.753700f, -0.251500f, -0.607100f }	},
	{	{ -0.670355f, -0.017930f, -0.033036f },	{ 0.774513f, 0.913928f, 0.000000f },	{ 0.753700f, 0.607100f, -0.251500f }	},
	{	{ -0.670355f, -0.018115f, -0.033966f },	{ 0.810116f, 0.895373f, 0.000000f },	{ 0.753700f, 0.657100f, -0.000000f }	},
	{	{ -0.670355f, -0.014514f, -0.036790f },	{ 0.363778f, 0.735150f, 0.000000f },	{ 0.665700f, 0.285600f, -0.689400f }	},
	{	{ -0.670355f, -0.015684f, -0.037023f },	{ 0.367006f, 0.673391f, 0.000000f },	{ 0.665700f, 0.000000f, -0.746200f }	},
	{	{ -0.670355f, -0.013254f, -0.033966f },	{ 0.461904f, 0.837609f, 0.000000f },	{ 0.753700f, -0.657100f, -0.000000f }	},
	{	{ -0.670355f, -0.013439f, -0.033036f },	{ 0.487759f, 0.863197f, 0.000000f },	{ 0.753700f, -0.607100f, -0.251500f }	},
	{	{ -0.670355f, -0.017403f, -0.032247f },	{ 0.731225f, 0.923888f, 0.000000f },	{ 0.753700f, 0.464600f, -0.464700f }	},
	{	{ -0.670845f, -0.016614f, -0.031720f },	{ 0.679282f, 0.944752f, 0.000000f },	{ -0.353100f, 0.358000f, -0.864300f }	},
	{	{ -0.670355f, -0.017846f, -0.036127f },	{ 0.938774f, 0.884490f, 0.000000f },	{ 0.665700f, -0.527600f, -0.527700f }	},
	{	{ -0.670845f, -0.016854f, -0.036790f },	{ 0.951136f, 0.806624f, 0.000000f },	{ -0.336000f, -0.360500f, -0.870100f }	},
	{	{ -0.670355f, -0.013439f, -0.034896f },	{ 0.443432f, 0.807891f, 0.000000f },	{ 0.753700f, -0.607100f, 0.251500f }	},
	{	{ -0.670355f, -0.018508f, -0.035136f },	{ 0.900768f, 0.936694f, 0.000000f },	{ 0.665700f, -0.689400f, -0.285500f }	},
	{	{ -0.670355f, -0.018741f, -0.033966f },	{ 0.858548f, 0.971635f, 0.000000f },	{ 0.665700f, -0.746200f, -0.000000f }	},
	{	{ -0.670355f, -0.015684f, -0.030909f },	{ 0.611514f, 0.990653f, 0.000000f },	{ 0.665700f, 0.000000f, 0.746200f }	},
	{	{ -0.670355f, -0.014514f, -0.031141f },	{ 0.541291f, 0.972837f, 0.000000f },	{ 0.665700f, 0.285500f, 0.689400f }	},
	{	{ -0.670355f, -0.015684f, -0.036396f },	{ 0.428613f, 0.679316f, 0.000000f },	{ 0.753700f, 0.000000f, 0.657100f }	},
	{	{ -0.670355f, -0.014754f, -0.036211f },	{ 0.427140f, 0.727180f, 0.000000f },	{ 0.753700f, -0.251500f, 0.607100f }	},
	{	{ -0.670355f, -0.017846f, -0.031804f },	{ 0.751231f, 0.999872f, 0.000000f },	{ 0.665700f, -0.527600f, 0.527600f }	},
	{	{ -0.670845f, -0.018508f, -0.032796f },	{ 0.804169f, 0.971550f, 0.000000f },	{ -0.336000f, -0.870100f, 0.360400f }	},
	{	{ -0.670355f, -0.013522f, -0.031804f },	{ 0.479619f, 0.948572f, 0.000000f },	{ 0.665700f, 0.527600f, 0.527600f }	},
	{	{ -0.670355f, -0.015684f, -0.031535f },	{ 0.624776f, 0.918807f, 0.000000f },	{ 0.753700f, 0.000000f, -0.657100f }	},
	{	{ -0.670845f, -0.017930f, -0.034896f },	{ 0.858283f, 0.883100f, 0.000000f },	{ -0.353100f, 0.864300f, 0.358000f }	},
	{	{ -0.670845f, -0.014514f, -0.036790f },	{ 0.380756f, 0.735091f, 0.000000f },	{ -0.336000f, 0.360500f, -0.870100f }	},
	{	{ -0.670845f, -0.013965f, -0.032247f },	{ 0.515413f, 0.903679f, 0.000000f },	{ -0.353200f, -0.661500f, -0.661500f }	},
	{	{ -0.670355f, -0.016854f, -0.036790f },	{ 0.972479f, 0.815545f, 0.000000f },	{ 0.665700f, -0.285500f, -0.689400f }	},
	{	{ -0.670845f, -0.015684f, -0.037023f },	{ 0.977339f, 0.728230f, 0.000000f },	{ -0.336000f, 0.000000f, -0.941800f }	},
	{	{ -0.670355f, -0.016614f, -0.031720f },	{ 0.680084f, 0.925197f, 0.000000f },	{ 0.753700f, 0.251500f, -0.607100f }	},
	{	{ -0.670355f, -0.013965f, -0.035684f },	{ 0.431858f, 0.771073f, 0.000000f },	{ 0.753700f, -0.464700f, 0.464600f }	},
	{	{ -0.670355f, -0.018508f, -0.032796f },	{ 0.809409f, 0.991220f, 0.000000f },	{ 0.665700f, -0.689400f, 0.285500f }	},
	{	{ -0.671081f, -0.016776f, -0.031330f },	{ 0.683341f, 0.966759f, 0.000000f },	{ -0.904500f, -0.163200f, 0.394000f }	},
	{	{ -0.671081f, -0.012831f, -0.033966f },	{ 0.425187f, 0.866028f, 0.000000f },	{ -0.904500f, 0.426500f, -0.000000f }	},
	{	{ -0.671063f, -0.013074f, -0.033966f },	{ 0.436177f, 0.857832f, 0.000000f },	{ -0.907700f, -0.419400f, -0.000000f }	},
	{	{ -0.671081f, -0.013667f, -0.035983f },	{ 0.395741f, 0.785541f, 0.000000f },	{ -0.904500f, 0.301500f, -0.301600f }	},
	{	{ -0.671063f, -0.013838f, -0.035812f },	{ 0.404943f, 0.779684f, 0.000000f },	{ -0.907800f, -0.296500f, 0.296600f }	},
	{	{ -0.671063f, -0.017530f, -0.035812f },	{ 0.899992f, 0.850019f, 0.000000f },	{ -0.907700f, 0.296600f, 0.296600f }	},
	{	{ -0.671081f, -0.018320f, -0.035057f },	{ 0.875423f, 0.908550f, 0.000000f },	{ -0.904500f, -0.394000f, -0.163200f }	},
	{	{ -0.671063f, -0.015684f, -0.036576f },	{ 0.951787f, 0.722755f, 0.000000f },	{ -0.907700f, 0.000000f, 0.419500f }	},
	{	{ -0.671063f, -0.018096f, -0.034965f },	{ 0.867328f, 0.895562f, 0.000000f },	{ -0.907700f, 0.387600f, 0.160500f }	},
	{	{ -0.671063f, -0.018096f, -0.032967f },	{ 0.789065f, 0.946039f, 0.000000f },	{ -0.907700f, 0.387700f, -0.160500f }	},
	{	{ -0.671081f, -0.013667f, -0.031949f },	{ 0.497676f, 0.920844f, 0.000000f },	{ -0.904500f, 0.301500f, 0.301600f }	},
	{	{ -0.669406f, -0.013649f, -0.035736f },	{ 0.036444f, 0.357427f, 0.000000f },	{ -0.443300f, 0.828100f, 0.343000f }	},
	{	{ -0.668655f, -0.013649f, -0.035736f },	{ 0.006137f, 0.356909f, 0.000000f },	{ 0.000000f, 0.923900f, 0.382700f }	},
	{	{ -0.668655f, -0.013475f, -0.036611f },	{ 0.005507f, 0.393734f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.669406f, -0.015760f, -0.038895f },	{ 0.032929f, 0.576678f, 0.000000f },	{ -0.443300f, 0.000000f, -0.896300f }	},
	{	{ -0.668655f, -0.015760f, -0.038895f },	{ 0.002520f, 0.576214f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.668655f, -0.016634f, -0.038721f },	{ 0.001696f, 0.630037f, 0.000000f },	{ 0.000000f, -0.382700f, -0.923900f }	},
	{	{ -0.669406f, -0.013649f, -0.037485f },	{ 0.035215f, 0.431076f, 0.000000f },	{ -0.443300f, 0.828100f, -0.343000f }	},
	{	{ -0.668655f, -0.013649f, -0.037485f },	{ 0.004883f, 0.430573f, 0.000000f },	{ 0.000000f, 0.923900f, -0.382700f }	},
	{	{ -0.668655f, -0.014144f, -0.038226f },	{ 0.004174f, 0.473052f, 0.000000f },	{ 0.000000f, 0.707100f, -0.707100f }	},
	{	{ -0.669406f, -0.017375f, -0.038226f },	{ 0.031411f, 0.680006f, 0.000000f },	{ -0.443300f, -0.633800f, -0.633800f }	},
	{	{ -0.668655f, -0.017375f, -0.038226f },	{ 0.000931f, 0.679602f, 0.000000f },	{ 0.000000f, -0.707100f, -0.707100f }	},
	{	{ -0.668655f, -0.017871f, -0.037485f },	{ 0.000397f, 0.722367f, 0.000000f },	{ 0.000000f, -0.923900f, -0.382700f }	},
	{	{ -0.669406f, -0.014886f, -0.038721f },	{ 0.033748f, 0.522918f, 0.000000f },	{ -0.443300f, 0.343000f, -0.828100f }	},
	{	{ -0.668655f, -0.014886f, -0.038721f },	{ 0.003369f, 0.522439f, 0.000000f },	{ 0.000000f, 0.382700f, -0.923900f }	},
	{	{ -0.669406f, -0.018044f, -0.036611f },	{ 0.030675f, 0.759643f, 0.000000f },	{ -0.443300f, -0.896300f, -0.000000f }	},
	{	{ -0.668655f, -0.018044f, -0.036611f },	{ 0.000128f, 0.759554f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.668655f, -0.017871f, -0.035736f },	{ 0.000128f, 0.796803f, 0.000000f },	{ 0.000000f, -0.923900f, 0.382700f }	},
	{	{ -0.669406f, -0.017375f, -0.034995f },	{ 0.031106f, 0.839310f, 0.000000f },	{ -0.443300f, -0.633800f, 0.633800f }	},
	{	{ -0.668655f, -0.017375f, -0.034995f },	{ 0.000519f, 0.839772f, 0.000000f },	{ 0.000000f, -0.707100f, 0.707100f }	},
	{	{ -0.668655f, -0.016634f, -0.034500f },	{ 0.001534f, 0.889716f, 0.000000f },	{ 0.000000f, -0.382700f, 0.923900f }	},
	{	{ -0.669406f, -0.015760f, -0.034326f },	{ 0.034025f, 0.942206f, 0.000000f },	{ -0.443300f, 0.000000f, 0.896300f }	},
	{	{ -0.668655f, -0.015760f, -0.034326f },	{ 0.003370f, 0.944056f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.668655f, -0.014886f, -0.034500f },	{ 0.008216f, 0.999872f, 0.000000f },	{ 0.000000f, 0.382700f, 0.923900f }	},
	{	{ -0.669406f, -0.014144f, -0.034995f },	{ 0.037170f, 0.315006f, 0.000000f },	{ -0.443300f, 0.633800f, 0.633800f }	},
	{	{ -0.668655f, -0.014144f, -0.034995f },	{ 0.006869f, 0.314484f, 0.000000f },	{ 0.000000f, 0.707100f, 0.707100f }	},
	{	{ -0.669406f, -0.013475f, -0.036611f },	{ 0.035825f, 0.394244f, 0.000000f },	{ -0.443300f, 0.896300f, -0.000000f }	},
	{	{ -0.669406f, -0.016634f, -0.038721f },	{ 0.032131f, 0.630492f, 0.000000f },	{ -0.443300f, -0.343000f, -0.828100f }	},
	{	{ -0.669406f, -0.014144f, -0.038226f },	{ 0.034526f, 0.473545f, 0.000000f },	{ -0.443300f, 0.633800f, -0.633800f }	},
	{	{ -0.669406f, -0.017871f, -0.037485f },	{ 0.030915f, 0.722645f, 0.000000f },	{ -0.443300f, -0.828100f, -0.343000f }	},
	{	{ -0.669406f, -0.017871f, -0.035736f },	{ 0.030698f, 0.796647f, 0.000000f },	{ -0.443300f, -0.828100f, 0.343000f }	},
	{	{ -0.669406f, -0.016634f, -0.034500f },	{ 0.032128f, 0.888879f, 0.000000f },	{ -0.443300f, -0.343000f, 0.828100f }	},
	{	{ -0.669406f, -0.014886f, -0.034500f },	{ 0.038020f, 0.265731f, 0.000000f },	{ -0.443300f, 0.343000f, 0.828100f }	},
	{	{ -0.668655f, -0.014886f, -0.034500f },	{ 0.007720f, 0.265208f, 0.000000f },	{ 0.000000f, 0.382700f, 0.923900f }	},
	{	{ -0.669406f, -0.017871f, -0.035736f },	{ 0.050151f, 0.801597f, 0.000000f },	{ -0.443300f, -0.828100f, 0.343000f }	},
	{	{ -0.669406f, -0.017375f, -0.034995f },	{ 0.037251f, 0.840614f, 0.000000f },	{ -0.443300f, -0.633800f, 0.633800f }	},
	{	{ -0.669971f, -0.016794f, -0.035577f },	{ 0.080357f, 0.866594f, 0.000000f },	{ -0.870100f, -0.348400f, 0.348400f }	},
	{	{ -0.669971f, -0.015760f, -0.035148f },	{ 0.075145f, 0.939010f, 0.000000f },	{ -0.870200f, 0.000000f, 0.492700f }	},
	{	{ -0.669971f, -0.015200f, -0.035260f },	{ 0.297350f, 0.949295f, 0.000000f },	{ -0.870200f, 0.188500f, 0.455200f }	},
	{	{ -0.669406f, -0.014886f, -0.034500f },	{ 0.328326f, 0.964560f, 0.000000f },	{ -0.443300f, 0.343000f, 0.828100f }	},
	{	{ -0.669406f, -0.014144f, -0.034995f },	{ 0.351147f, 0.932100f, 0.000000f },	{ -0.443300f, 0.633800f, 0.633800f }	},
	{	{ -0.669406f, -0.013649f, -0.035736f },	{ 0.363522f, 0.899962f, 0.000000f },	{ -0.443300f, 0.828100f, 0.343000f }	},
	{	{ -0.669406f, -0.013475f, -0.036611f },	{ 0.362643f, 0.869717f, 0.000000f },	{ -0.443300f, 0.896300f, -0.000000f }	},
	{	{ -0.669971f, -0.014298f, -0.036611f },	{ 0.316872f, 0.883124f, 0.000000f },	{ -0.870200f, 0.492700f, -0.000000f }	},
	{	{ -0.669406f, -0.015760f, -0.038895f },	{ 0.238086f, 0.786408f, 0.000000f },	{ -0.443300f, 0.000000f, -0.896300f }	},
	{	{ -0.669406f, -0.016634f, -0.038721f },	{ 0.191630f, 0.771745f, 0.000000f },	{ -0.443300f, -0.343000f, -0.828100f }	},
	{	{ -0.669971f, -0.016319f, -0.037961f },	{ 0.191442f, 0.814206f, 0.000000f },	{ -0.870100f, -0.188600f, -0.455200f }	},
	{	{ -0.669406f, -0.013649f, -0.037485f },	{ 0.347438f, 0.843219f, 0.000000f },	{ -0.443300f, 0.828100f, -0.343000f }	},
	{	{ -0.669406f, -0.014144f, -0.038226f },	{ 0.319796f, 0.821610f, 0.000000f },	{ -0.443300f, 0.633800f, -0.633800f }	},
	{	{ -0.669971f, -0.014726f, -0.037645f },	{ 0.286339f, 0.849144f, 0.000000f },	{ -0.870100f, 0.348400f, -0.348400f }	},
	{	{ -0.669971f, -0.016794f, -0.037645f },	{ 0.158261f, 0.808902f, 0.000000f },	{ -0.870100f, -0.348500f, -0.348400f }	},
	{	{ -0.669406f, -0.017375f, -0.038226f },	{ 0.146800f, 0.761559f, 0.000000f },	{ -0.443300f, -0.633800f, -0.633800f }	},
	{	{ -0.669406f, -0.017871f, -0.037485f },	{ 0.106476f, 0.761137f, 0.000000f },	{ -0.443300f, -0.828100f, -0.343000f }	},
	{	{ -0.669971f, -0.015200f, -0.037961f },	{ 0.258784f, 0.835398f, 0.000000f },	{ -0.870100f, 0.188500f, -0.455200f }	},
	{	{ -0.669406f, -0.014886f, -0.038721f },	{ 0.282362f, 0.803271f, 0.000000f },	{ -0.443300f, 0.343000f, -0.828100f }	},
	{	{ -0.669406f, -0.018044f, -0.036611f },	{ 0.073374f, 0.774276f, 0.000000f },	{ -0.443300f, -0.896300f, -0.000000f }	},
	{	{ -0.669971f, -0.017111f, -0.036051f },	{ 0.090138f, 0.838895f, 0.000000f },	{ -0.870100f, -0.455200f, 0.188500f }	},
	{	{ -0.669971f, -0.016319f, -0.035260f },	{ 0.075638f, 0.901274f, 0.000000f },	{ -0.870200f, -0.188500f, 0.455200f }	},
	{	{ -0.669406f, -0.014886f, -0.034500f },	{ 0.040174f, 0.996818f, 0.000000f },	{ -0.443300f, 0.343000f, 0.828100f }	},
	{	{ -0.669971f, -0.015200f, -0.035260f },	{ 0.080354f, 0.975957f, 0.000000f },	{ -0.870200f, 0.188500f, 0.455200f }	},
	{	{ -0.669971f, -0.014409f, -0.036051f },	{ 0.318236f, 0.903946f, 0.000000f },	{ -0.870200f, 0.455200f, 0.188500f }	},
	{	{ -0.669971f, -0.017111f, -0.037170f },	{ 0.129466f, 0.809965f, 0.000000f },	{ -0.870100f, -0.455200f, -0.188500f }	},
	{	{ -0.670269f, -0.015465f, -0.037323f },	{ 0.236545f, 0.863531f, 0.000000f },	{ -0.583100f, 0.311000f, -0.750500f }	},
	{	{ -0.669971f, -0.015760f, -0.038073f },	{ 0.226162f, 0.823111f, 0.000000f },	{ -0.870100f, 0.000000f, -0.492700f }	},
	{	{ -0.669971f, -0.017222f, -0.036611f },	{ 0.106523f, 0.819815f, 0.000000f },	{ -0.870100f, -0.492800f, -0.000000f }	},
	{	{ -0.670269f, -0.016472f, -0.036316f },	{ 0.128400f, 0.877239f, 0.000000f },	{ -0.583200f, -0.750400f, 0.310900f }	},
	{	{ -0.670269f, -0.016055f, -0.035898f },	{ 0.112647f, 0.915359f, 0.000000f },	{ -0.583200f, -0.310800f, 0.750500f }	},
	{	{ -0.670269f, -0.015760f, -0.035840f },	{ 0.110003f, 0.937968f, 0.000000f },	{ -0.583200f, 0.000000f, 0.812300f }	},
	{	{ -0.670269f, -0.015215f, -0.036066f },	{ 0.274854f, 0.926889f, 0.000000f },	{ -0.583200f, 0.574400f, 0.574400f }	},
	{	{ -0.669971f, -0.014726f, -0.035577f },	{ 0.310973f, 0.926520f, 0.000000f },	{ -0.870200f, 0.348400f, 0.348400f }	},
	{	{ -0.669971f, -0.014409f, -0.037170f },	{ 0.306155f, 0.864773f, 0.000000f },	{ -0.870100f, 0.455200f, -0.188500f }	},
	{	{ -0.670269f, -0.015048f, -0.036906f },	{ 0.265382f, 0.885582f, 0.000000f },	{ -0.583100f, 0.750500f, -0.310800f }	},
	{	{ -0.670269f, -0.016055f, -0.037323f },	{ 0.194959f, 0.852131f, 0.000000f },	{ -0.583100f, -0.310900f, -0.750500f }	},
	{	{ -0.670269f, -0.015215f, -0.037156f },	{ 0.253241f, 0.873736f, 0.000000f },	{ -0.583100f, 0.574500f, -0.574400f }	},
	{	{ -0.670269f, -0.016531f, -0.036611f },	{ 0.140071f, 0.864499f, 0.000000f },	{ -0.583200f, -0.812300f, 0.000000f }	},
	{	{ -0.670269f, -0.015465f, -0.035898f },	{ 0.271081f, 0.941752f, 0.000000f },	{ -0.583200f, 0.310800f, 0.750500f }	},
	{	{ -0.670269f, -0.015048f, -0.036316f },	{ 0.275628f, 0.911877f, 0.000000f },	{ -0.583200f, 0.750500f, 0.310900f }	},
	{	{ -0.670269f, -0.016305f, -0.037156f },	{ 0.173851f, 0.852187f, 0.000000f },	{ -0.583100f, -0.574400f, -0.574400f }	},
	{	{ -0.671072f, -0.015215f, -0.037156f },	{ 0.233906f, 0.897662f, 0.000000f },	{ -0.455200f, 0.629600f, -0.629600f }	},
	{	{ -0.671072f, -0.016472f, -0.036906f },	{ 0.169126f, 0.887960f, 0.000000f },	{ -0.455200f, -0.822600f, -0.340700f }	},
	{	{ -0.670269f, -0.016472f, -0.036906f },	{ 0.155162f, 0.856283f, 0.000000f },	{ -0.583200f, -0.750500f, -0.310900f }	},
	{	{ -0.671072f, -0.016472f, -0.036316f },	{ 0.155113f, 0.898908f, 0.000000f },	{ -0.455200f, -0.822600f, 0.340800f }	},
	{	{ -0.670269f, -0.016305f, -0.036066f },	{ 0.118798f, 0.894343f, 0.000000f },	{ -0.583200f, -0.574400f, 0.574400f }	},
	{	{ -0.671072f, -0.016055f, -0.035898f },	{ 0.147766f, 0.923320f, 0.000000f },	{ -0.455100f, -0.340700f, 0.822600f }	},
	{	{ -0.671072f, -0.015465f, -0.035898f },	{ 0.245362f, 0.939219f, 0.000000f },	{ -0.455100f, 0.340800f, 0.822600f }	},
	{	{ -0.671072f, -0.015048f, -0.036316f },	{ 0.248157f, 0.917172f, 0.000000f },	{ -0.455200f, 0.822600f, 0.340800f }	},
	{	{ -0.670269f, -0.014989f, -0.036611f },	{ 0.272439f, 0.898265f, 0.000000f },	{ -0.583200f, 0.812300f, 0.000000f }	},
	{	{ -0.671072f, -0.015760f, -0.037381f },	{ 0.208305f, 0.888159f, 0.000000f },	{ -0.455200f, 0.000000f, -0.890400f }	},
	{	{ -0.670269f, -0.015760f, -0.037381f },	{ 0.216618f, 0.855737f, 0.000000f },	{ -0.583100f, 0.000000f, -0.812300f }	},
	{	{ -0.671072f, -0.015048f, -0.036906f },	{ 0.241498f, 0.903462f, 0.000000f },	{ -0.455100f, 0.822600f, -0.340700f }	},
	{	{ -0.671072f, -0.016305f, -0.037156f },	{ 0.179580f, 0.885639f, 0.000000f },	{ -0.455200f, -0.629600f, -0.629600f }	},
	{	{ -0.671072f, -0.015465f, -0.037323f },	{ 0.222609f, 0.892388f, 0.000000f },	{ -0.455200f, 0.340700f, -0.822600f }	},
	{	{ -0.671072f, -0.016305f, -0.036066f },	{ 0.150666f, 0.909146f, 0.000000f },	{ -0.455100f, -0.629600f, 0.629600f }	},
	{	{ -0.671072f, -0.015760f, -0.035840f },	{ 0.146655f, 0.940701f, 0.000000f },	{ -0.455100f, 0.000000f, 0.890400f }	},
	{	{ -0.670269f, -0.015465f, -0.035898f },	{ 0.111116f, 0.958844f, 0.000000f },	{ -0.583200f, 0.310800f, 0.750500f }	},
	{	{ -0.671072f, -0.015215f, -0.036066f },	{ 0.248098f, 0.926627f, 0.000000f },	{ -0.455100f, 0.629600f, 0.629600f }	},
	{	{ -0.671072f, -0.014989f, -0.036611f },	{ 0.246020f, 0.909752f, 0.000000f },	{ -0.455200f, 0.890400f, -0.000000f }	},
	{	{ -0.671072f, -0.016055f, -0.037323f },	{ 0.193107f, 0.885692f, 0.000000f },	{ -0.455200f, -0.340700f, -0.822600f }	},
	{	{ -0.671337f, -0.015505f, -0.036866f },	{ 0.219559f, 0.911355f, 0.000000f },	{ -0.949300f, 0.222200f, -0.222200f }	},
	{	{ -0.671337f, -0.016093f, -0.036749f },	{ 0.181290f, 0.907177f, 0.000000f },	{ -0.949300f, -0.290400f, -0.120300f }	},
	{	{ -0.671337f, -0.015760f, -0.036971f },	{ 0.204505f, 0.906116f, 0.000000f },	{ -0.949300f, 0.000000f, -0.314300f }	},
	{	{ -0.671072f, -0.016531f, -0.036611f },	{ 0.161374f, 0.892360f, 0.000000f },	{ -0.455200f, -0.890400f, -0.000000f }	},
	{	{ -0.671337f, -0.016093f, -0.036473f },	{ 0.172524f, 0.915057f, 0.000000f },	{ -0.949300f, -0.290500f, 0.120300f }	},
	{	{ -0.671337f, -0.016015f, -0.036356f },	{ 0.169901f, 0.921876f, 0.000000f },	{ -0.949200f, -0.222500f, 0.222300f }	},
	{	{ -0.671072f, -0.015465f, -0.035898f },	{ 0.147471f, 0.960011f, 0.000000f },	{ -0.455100f, 0.340800f, 0.822600f }	},
	{	{ -0.671337f, -0.015622f, -0.036277f },	{ 0.168901f, 0.949548f, 0.000000f },	{ -0.949300f, 0.120100f, 0.290400f }	},
	{	{ -0.671337f, -0.015427f, -0.036473f },	{ 0.229644f, 0.923380f, 0.000000f },	{ -0.949300f, 0.290400f, 0.120300f }	},
	{	{ -0.671337f, -0.015399f, -0.036611f },	{ 0.228032f, 0.918694f, 0.000000f },	{ -0.949300f, 0.314400f, -0.000000f }	},
	{	{ -0.671337f, -0.016015f, -0.036866f },	{ 0.187945f, 0.905577f, 0.000000f },	{ -0.949300f, -0.222200f, -0.222200f }	},
	{	{ -0.671337f, -0.016121f, -0.036611f },	{ 0.176315f, 0.910336f, 0.000000f },	{ -0.949300f, -0.314400f, -0.000000f }	},
	{	{ -0.671337f, -0.015898f, -0.036277f },	{ 0.168252f, 0.930517f, 0.000000f },	{ -0.949300f, -0.119900f, 0.290400f }	},
	{	{ -0.671337f, -0.015505f, -0.036356f },	{ 0.229437f, 0.929172f, 0.000000f },	{ -0.949200f, 0.222400f, 0.222300f }	},
	{	{ -0.671337f, -0.016015f, -0.036866f },	{ 0.194981f, 0.921419f, 0.000000f },	{ -0.949300f, -0.222200f, -0.222200f }	},
	{	{ -0.671337f, -0.015760f, -0.036250f },	{ 0.167529f, 0.940074f, 0.000000f },	{ -0.949300f, 0.000100f, 0.314400f }	},
	{	{ -0.671337f, -0.015760f, -0.036971f },	{ 0.200486f, 0.938902f, 0.000000f },	{ -0.949300f, 0.000000f, -0.314300f }	},
	{	{ -0.670355f, -0.013254f, -0.033966f },	{ 0.400516f, 0.499965f, 0.000000f },	{ 0.753700f, -0.657100f, -0.000000f }	},
	{	{ -0.670355f, -0.017403f, -0.035684f },	{ 0.623749f, 0.639765f, 0.000000f },	{ 0.753700f, 0.464600f, 0.464600f }	},
	{	{ -0.670355f, -0.015684f, -0.031535f },	{ 0.571377f, 0.448136f, 0.000000f },	{ 0.753700f, 0.000000f, -0.657100f }	},
	{	{ -0.670845f, -0.015684f, -0.036396f },	{ 0.412374f, 0.678667f, 0.000000f },	{ -0.353100f, 0.000000f, 0.935500f }	},
	{	{ -0.670355f, -0.015684f, -0.037023f },	{ 0.999872f, 0.735800f, 0.000000f },	{ 0.665700f, 0.000000f, -0.746200f }	},
	{	{ -0.671081f, -0.015684f, -0.036819f },	{ 0.962857f, 0.724832f, 0.000000f },	{ -0.904500f, 0.000000f, -0.426500f }	},
	{	{ -0.671337f, -0.015427f, -0.036749f },	{ 0.224803f, 0.914756f, 0.000000f },	{ -0.949300f, 0.290400f, -0.120300f }	},
	{	{ -0.671337f, -0.015622f, -0.036944f },	{ 0.212538f, 0.908398f, 0.000000f },	{ -0.949300f, 0.119900f, -0.290400f }	},
	{	{ -0.671337f, -0.015898f, -0.036944f },	{ 0.195982f, 0.905291f, 0.000000f },	{ -0.949300f, -0.120000f, -0.290400f }	},
	{	{ -0.671337f, -0.015622f, -0.036277f },	{ 0.227318f, 0.935668f, 0.000000f },	{ -0.949300f, 0.120100f, 0.290400f }	},
	{	{ -0.671337f, -0.015505f, -0.036866f },	{ 0.196215f, 0.956782f, 0.000000f },	{ -0.949300f, 0.222200f, -0.222200f }	},
	{	{ -0.671337f, -0.015622f, -0.036944f },	{ 0.199548f, 0.948555f, 0.000000f },	{ -0.949300f, 0.119900f, -0.290400f }	},
	{	{ -0.671337f, -0.015399f, -0.036611f },	{ 0.184724f, 0.964483f, 0.000000f },	{ -0.949300f, 0.314400f, -0.000000f }	},
	{	{ -0.671337f, -0.015427f, -0.036749f },	{ 0.191010f, 0.962375f, 0.000000f },	{ -0.949300f, 0.290400f, -0.120300f }	},
	{	{ -0.671337f, -0.015505f, -0.036356f },	{ 0.172759f, 0.957541f, 0.000000f },	{ -0.949200f, 0.222400f, 0.222300f }	},
	{	{ -0.671337f, -0.015427f, -0.036473f },	{ 0.178316f, 0.962785f, 0.000000f },	{ -0.949300f, 0.290400f, 0.120300f }	},
	{	{ -0.671337f, -0.016015f, -0.036356f },	{ 0.171545f, 0.922282f, 0.000000f },	{ -0.949200f, -0.222500f, 0.222300f }	},
	{	{ -0.671337f, -0.016121f, -0.036611f },	{ 0.182994f, 0.914536f, 0.000000f },	{ -0.949300f, -0.314400f, -0.000000f }	},
	{	{ -0.671337f, -0.016093f, -0.036473f },	{ 0.176722f, 0.916670f, 0.000000f },	{ -0.949300f, -0.290500f, 0.120300f }	},
	{	{ -0.671337f, -0.016093f, -0.036749f },	{ 0.189405f, 0.916202f, 0.000000f },	{ -0.949300f, -0.290400f, -0.120300f }	},
	{	{ -0.671337f, -0.015898f, -0.036944f },	{ 0.198872f, 0.929389f, 0.000000f },	{ -0.949300f, -0.120000f, -0.290400f }	},
};
#define _DoorFrontHandle_vertices_
#endif
#ifndef _DoorFrontHandle_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int DoorFrontHandle_indices[1098] =
{
	 0, 1, 2,
	 3, 4, 5,
	 6, 7, 8,
	 9, 10, 11,
	 12, 13, 14,
	 15, 16, 17,
	 18, 19, 20,
	 1, 21, 22,
	 5, 4, 23,
	 20, 0, 24,
	 25, 8, 3,
	 26, 11, 7,
	 14, 13, 10,
	 27, 17, 12,
	 21, 16, 15,
	 28, 23, 19,
	 29, 30, 31,
	 32, 33, 34,
	 35, 36, 37,
	 38, 39, 40,
	 41, 42, 43,
	 44, 45, 46,
	 47, 48, 49,
	 50, 51, 37,
	 52, 53, 54,
	 55, 56, 57,
	 58, 59, 60,
	 61, 62, 63,
	 64, 65, 66,
	 67, 68, 69,
	 70, 71, 72,
	 73, 31, 74,
	 75, 76, 77,
	 78, 35, 44,
	 79, 80, 32,
	 81, 82, 38,
	 83, 84, 85,
	 86, 87, 73,
	 88, 89, 71,
	 90, 91, 67,
	 92, 93, 65,
	 94, 61, 95,
	 96, 58, 97,
	 98, 56, 55,
	 99, 100, 53,
	 101, 102, 50,
	 103, 104, 47,
	 105, 44, 106,
	 107, 79, 42,
	 82, 75, 39,
	 101, 36, 35,
	 80, 83, 33,
	 87, 108, 29,
	 89, 81, 109,
	 84, 90, 110,
	 93, 86, 111,
	 94, 88, 70,
	 112, 97, 113,
	 92, 64, 56,
	 114, 95, 29,
	 96, 99, 52,
	 104, 115, 55,
	 100, 116, 106,
	 102, 107, 41,
	 45, 117, 63,
	 43, 118, 119,
	 34, 120, 121,
	 68, 49, 48,
	 59, 122, 40,
	 123, 54, 72,
	 37, 51, 31,
	 46, 45, 62,
	 43, 66, 74,
	 117, 37, 30,
	 34, 57, 119,
	 120, 69, 48,
	 60, 40, 124,
	 123, 125, 122,
	 46, 126, 72,
	 51, 127, 74,
	 109, 125, 72,
	 85, 110, 69,
	 111, 74, 66,
	 61, 70, 126,
	 113, 97, 60,
	 56, 64, 119,
	 29, 95, 63,
	 58, 52, 123,
	 47, 55, 121,
	 106, 46, 54,
	 41, 127, 51,
	 77, 124, 40,
	 44, 35, 117,
	 32, 118, 43,
	 109, 38, 122,
	 85, 120, 34,
	 128, 129, 130,
	 131, 132, 133,
	 134, 135, 136,
	 137, 138, 139,
	 140, 141, 132,
	 142, 143, 144,
	 145, 146, 147,
	 148, 149, 150,
	 151, 152, 129,
	 153, 130, 135,
	 154, 133, 138,
	 155, 136, 141,
	 156, 139, 143,
	 157, 144, 146,
	 158, 147, 149,
	 159, 160, 152,
	 161, 162, 163,
	 158, 148, 164,
	 165, 166, 167,
	 168, 169, 170,
	 171, 172, 173,
	 174, 175, 176,
	 177, 178, 179,
	 180, 181, 171,
	 182, 161, 183,
	 162, 158, 184,
	 148, 185, 186,
	 167, 168, 187,
	 170, 169, 174,
	 172, 178, 177,
	 175, 181, 180,
	 188, 179, 182,
	 189, 180, 190,
	 191, 183, 192,
	 163, 184, 193,
	 194, 164, 186,
	 195, 196, 187,
	 170, 197, 198,
	 199, 173, 177,
	 200, 176, 180,
	 188, 191, 201,
	 192, 183, 163,
	 184, 164, 194,
	 202, 165, 196,
	 203, 187, 170,
	 190, 173, 199,
	 198, 197, 176,
	 204, 177, 188,
	 205, 200, 189,
	 206, 207, 201,
	 208, 192, 209,
	 210, 193, 194,
	 211, 202, 195,
	 212, 203, 213,
	 214, 215, 199,
	 216, 198, 200,
	 217, 204, 207,
	 218, 189, 215,
	 201, 192, 208,
	 219, 209, 193,
	 220, 194, 221,
	 222, 195, 203,
	 223, 213, 198,
	 224, 199, 204,
	 216, 205, 225,
	 217, 206, 226,
	 218, 214, 227,
	 228, 208, 229,
	 230, 219, 210,
	 220, 231, 232,
	 222, 212, 233,
	 234, 223, 216,
	 224, 217, 235,
	 225, 205, 218,
	 206, 228, 236,
	 229, 208, 219,
	 237, 210, 220,
	 211, 222, 238,
	 233, 212, 223,
	 227, 214, 224,
	 239, 240, 241,
	 0, 2, 24,
	 3, 5, 242,
	 6, 8, 25,
	 9, 11, 26,
	 12, 14, 243,
	 15, 17, 27,
	 18, 20, 244,
	 1, 22, 2,
	 5, 23, 28,
	 20, 24, 244,
	 25, 3, 242,
	 26, 7, 6,
	 14, 10, 9,
	 27, 12, 243,
	 21, 15, 22,
	 28, 19, 18,
	 29, 31, 73,
	 32, 34, 118,
	 35, 37, 117,
	 38, 40, 122,
	 41, 43, 127,
	 44, 46, 106,
	 47, 49, 245,
	 50, 37, 36,
	 52, 54, 123,
	 55, 57, 121,
	 58, 60, 97,
	 61, 63, 95,
	 64, 66, 119,
	 67, 69, 110,
	 70, 72, 126,
	 73, 74, 111,
	 75, 77, 39,
	 78, 44, 105,
	 79, 32, 42,
	 81, 38, 109,
	 83, 85, 33,
	 86, 73, 111,
	 88, 71, 70,
	 90, 67, 110,
	 92, 65, 64,
	 94, 95, 114,
	 96, 97, 112,
	 98, 55, 115,
	 99, 53, 52,
	 101, 50, 36,
	 103, 47, 245,
	 105, 106, 116,
	 107, 42, 41,
	 82, 39, 38,
	 101, 35, 78,
	 80, 33, 32,
	 87, 29, 73,
	 89, 109, 71,
	 84, 110, 85,
	 93, 111, 65,
	 94, 70, 61,
	 112, 113, 246,
	 92, 56, 98,
	 114, 29, 108,
	 96, 52, 58,
	 104, 55, 47,
	 100, 106, 53,
	 102, 41, 50,
	 45, 63, 62,
	 43, 119, 66,
	 34, 121, 57,
	 68, 48, 69,
	 59, 40, 60,
	 123, 72, 125,
	 37, 31, 30,
	 46, 62, 126,
	 43, 74, 127,
	 117, 30, 63,
	 34, 119, 118,
	 120, 48, 121,
	 60, 124, 247,
	 123, 122, 59,
	 46, 72, 54,
	 51, 74, 31,
	 109, 72, 71,
	 85, 69, 120,
	 111, 66, 65,
	 61, 126, 62,
	 113, 60, 247,
	 56, 119, 57,
	 29, 63, 30,
	 58, 123, 59,
	 47, 121, 48,
	 106, 54, 53,
	 41, 51, 50,
	 77, 40, 39,
	 44, 117, 45,
	 32, 43, 42,
	 109, 122, 125,
	 85, 34, 33,
	 128, 130, 153,
	 131, 133, 154,
	 134, 136, 155,
	 137, 139, 156,
	 140, 132, 131,
	 142, 144, 157,
	 145, 147, 158,
	 148, 150, 185,
	 151, 129, 128,
	 153, 135, 134,
	 154, 138, 137,
	 155, 141, 140,
	 156, 143, 142,
	 157, 146, 145,
	 158, 149, 148,
	 159, 152, 151,
	 161, 163, 183,
	 158, 164, 184,
	 165, 167, 196,
	 168, 170, 187,
	 171, 173, 190,
	 174, 176, 197,
	 177, 179, 188,
	 180, 171, 190,
	 182, 183, 191,
	 162, 184, 163,
	 148, 186, 164,
	 167, 187, 196,
	 170, 174, 197,
	 172, 177, 173,
	 175, 180, 176,
	 188, 182, 191,
	 189, 190, 215,
	 191, 192, 201,
	 163, 193, 209,
	 194, 186, 221,
	 195, 187, 203,
	 170, 198, 213,
	 199, 177, 204,
	 200, 180, 189,
	 188, 201, 207,
	 192, 163, 209,
	 184, 194, 193,
	 202, 196, 195,
	 203, 170, 213,
	 190, 199, 215,
	 198, 176, 200,
	 204, 188, 207,
	 205, 189, 218,
	 206, 201, 228,
	 208, 209, 219,
	 210, 194, 220,
	 211, 195, 222,
	 212, 213, 223,
	 214, 199, 224,
	 216, 200, 205,
	 217, 207, 206,
	 218, 215, 214,
	 201, 208, 228,
	 219, 193, 210,
	 220, 221, 231,
	 222, 203, 212,
	 223, 198, 216,
	 224, 204, 217,
	 216, 225, 248,
	 217, 226, 235,
	 218, 227, 249,
	 228, 229, 236,
	 230, 210, 237,
	 220, 232, 240,
	 222, 233, 238,
	 234, 216, 248,
	 224, 235, 250,
	 225, 218, 249,
	 206, 236, 226,
	 229, 219, 230,
	 237, 220, 240,
	 211, 238, 251,
	 233, 223, 234,
	 227, 224, 250,
	 241, 252, 253,
	 252, 254, 255,
	 254, 256, 257,
	 256, 240, 232,
	 240, 258, 237,
	 258, 259, 260,
	 259, 239, 261,
	 239, 241, 262,
	 241, 254, 252,
	 254, 241, 256,
	 256, 241, 240,
	 240, 259, 258,
	 259, 240, 239,
};
#define _DoorFrontHandle_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _DoorFrontHandle_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL DoorFrontHandle_materials[1] =
{
	{
		{{ 0.800000f, 0.800000f, 0.800000f },
		1.000000f,
		{ 0.047368f, 0.047368f, 0.047368f },
		225.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"RustedMetal",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _DoorFrontHandle_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _DoorFrontHandle_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int DoorFrontHandle_batches[1][2] =
{
	{ 1098, 0 },
};
#define _DoorFrontHandle_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _DoorFrontHandle_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH DoorFrontHandle_meshes[1] =
{
	{
		"default",
		1098,
		0,
		0,
	},
};
#define _DoorFrontHandle_meshes_
#endif
