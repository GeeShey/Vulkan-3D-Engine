// "WoodenBeamsExtraFront.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "WoodenBeamsExtraFront.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _WoodenBeamsExtraFront_version_
const char WoodenBeamsExtraFront_version[4] = { '0','1','9','d' };
#define _WoodenBeamsExtraFront_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _WoodenBeamsExtraFront_vertexcount_
const unsigned WoodenBeamsExtraFront_vertexcount = 60;
#define _WoodenBeamsExtraFront_vertexcount_
#endif
#ifndef _WoodenBeamsExtraFront_indexcount_
const unsigned WoodenBeamsExtraFront_indexcount = 84;
#define _WoodenBeamsExtraFront_indexcount_
#endif
#ifndef _WoodenBeamsExtraFront_materialcount_
const unsigned WoodenBeamsExtraFront_materialcount = 1; // can be used for batched draws
#define _WoodenBeamsExtraFront_materialcount_
#endif
#ifndef _WoodenBeamsExtraFront_meshcount_
const unsigned WoodenBeamsExtraFront_meshcount = 1;
#define _WoodenBeamsExtraFront_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _WoodenBeamsExtraFront_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT WoodenBeamsExtraFront_vertices[60] =
{
	{	{ 0.483015f, 0.064995f, -0.346081f },	{ 0.186872f, 0.850086f, 0.000000f },	{ 0.002100f, -0.105100f, 0.994500f }	},
	{	{ 0.640802f, 0.068178f, -0.346081f },	{ 0.991267f, 0.942224f, 0.000000f },	{ 0.002100f, -0.105100f, 0.994500f }	},
	{	{ 0.642184f, 0.078608f, -0.344982f },	{ 0.999921f, 0.999923f, 0.000000f },	{ 0.002100f, -0.105100f, 0.994500f }	},
	{	{ 0.642184f, 0.078608f, -0.355022f },	{ 0.999923f, 0.700095f, 0.000000f },	{ 0.002100f, -0.105100f, -0.994500f }	},
	{	{ 0.640802f, 0.068178f, -0.353923f },	{ 0.991268f, 0.757793f, 0.000000f },	{ 0.002100f, -0.105100f, -0.994500f }	},
	{	{ 0.483015f, 0.064995f, -0.353923f },	{ 0.186872f, 0.849931f, 0.000000f },	{ 0.002100f, -0.105100f, -0.994500f }	},
	{	{ 0.407405f, 0.062230f, -0.344982f },	{ 0.465998f, -0.230973f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.642936f, 0.062230f, -0.344982f },	{ 0.465993f, 1.766420f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.642936f, 0.073606f, -0.344982f },	{ 0.549534f, 1.766420f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.407405f, 0.062230f, -0.344982f },	{ 0.465998f, -0.230973f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.407405f, 0.062230f, -0.355022f },	{ 0.388279f, -0.230974f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.642936f, 0.062230f, -0.355023f },	{ 0.388275f, 1.766420f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.642936f, 0.073606f, -0.344982f },	{ 0.549758f, 1.766420f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.642936f, 0.073606f, -0.355023f },	{ 0.627477f, 1.766420f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.407405f, 0.073606f, -0.355022f },	{ 0.627475f, -0.230973f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.407405f, 0.073606f, -0.355022f },	{ 0.627475f, -0.230973f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.642936f, 0.073606f, -0.355023f },	{ 0.627477f, 1.766420f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.642936f, 0.062230f, -0.355023f },	{ 0.711014f, 1.766420f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.637750f, -0.056854f, -0.356851f },	{ 0.396072f, 1.068282f, 0.000000f },	{ -1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.637750f, -0.056854f, -0.343808f },	{ 0.313398f, 1.068282f, 0.000000f },	{ -1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.637750f, 0.076942f, -0.343808f },	{ 0.313399f, 0.176443f, 0.000000f },	{ -1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.637750f, 0.076942f, -0.356851f },	{ 0.396074f, 0.176443f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.649262f, 0.076942f, -0.356851f },	{ 0.469044f, 0.176443f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.649262f, -0.056854f, -0.356851f },	{ 0.469043f, 1.068282f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.637750f, 0.076942f, -0.343808f },	{ 0.624835f, 0.176443f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.637750f, -0.056854f, -0.343808f },	{ 0.624834f, 1.068283f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.649262f, -0.056854f, -0.343808f },	{ 0.551864f, 1.068283f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.649262f, 0.076942f, -0.343808f },	{ 0.551864f, 0.176443f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.649262f, -0.056854f, -0.343808f },	{ 0.551864f, 1.068283f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.649262f, -0.056854f, -0.356851f },	{ 0.469189f, 1.068282f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.638645f, 0.062230f, -0.348690f },	{ 0.465998f, -0.230973f, 0.000000f },	{ -1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.638645f, 0.062230f, -0.113159f },	{ 0.465993f, 1.766420f, 0.000000f },	{ -1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.638645f, 0.073606f, -0.113159f },	{ 0.549534f, 1.766420f, 0.000000f },	{ -1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.638645f, 0.062230f, -0.348690f },	{ 0.465998f, -0.230973f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.648686f, 0.062230f, -0.348690f },	{ 0.388279f, -0.230974f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.648686f, 0.062230f, -0.113159f },	{ 0.388275f, 1.766420f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.638645f, 0.073606f, -0.348690f },	{ 0.549757f, -0.230973f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.638645f, 0.073606f, -0.113159f },	{ 0.549758f, 1.766420f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.648686f, 0.073606f, -0.113159f },	{ 0.627477f, 1.766420f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.648686f, 0.073606f, -0.348690f },	{ 0.627475f, -0.230973f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.648686f, 0.073606f, -0.113159f },	{ 0.627477f, 1.766420f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.648686f, 0.062230f, -0.113159f },	{ 0.711014f, 1.766420f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.483015f, 0.064995f, -0.346081f },	{ 0.186872f, 0.850086f, 0.000000f },	{ -0.003500f, -0.039900f, 0.999200f }	},
	{	{ 0.642184f, 0.078608f, -0.344982f },	{ 0.999921f, 0.999923f, 0.000000f },	{ -0.003500f, -0.039900f, 0.999200f }	},
	{	{ 0.445400f, 0.095822f, -0.344982f },	{ 0.000077f, 0.999923f, 0.000000f },	{ -0.003500f, -0.039900f, 0.999200f }	},
	{	{ 0.642184f, 0.078608f, -0.355022f },	{ 0.999923f, 0.700095f, 0.000000f },	{ -0.003500f, -0.039900f, -0.999200f }	},
	{	{ 0.483015f, 0.064995f, -0.353923f },	{ 0.186872f, 0.849931f, 0.000000f },	{ -0.003500f, -0.039900f, -0.999200f }	},
	{	{ 0.445400f, 0.095822f, -0.355022f },	{ 0.000077f, 0.700095f, 0.000000f },	{ -0.003500f, -0.039900f, -0.999200f }	},
	{	{ 0.407405f, 0.073606f, -0.344982f },	{ 0.549536f, -0.230973f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.642936f, 0.062230f, -0.344982f },	{ 0.465993f, 1.766420f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.407405f, 0.073606f, -0.344982f },	{ 0.549757f, -0.230973f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.407405f, 0.062230f, -0.355022f },	{ 0.711016f, -0.230973f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.637750f, 0.076942f, -0.356851f },	{ 0.396074f, 0.176443f, 0.000000f },	{ -1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.637750f, -0.056854f, -0.356851f },	{ 0.396072f, 1.068282f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.649262f, 0.076942f, -0.343808f },	{ 0.551864f, 0.176443f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.649262f, 0.076942f, -0.356851f },	{ 0.469190f, 0.176443f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.638645f, 0.073606f, -0.348690f },	{ 0.549536f, -0.230973f, 0.000000f },	{ -1.000000f, -0.000000f, -0.000000f }	},
	{	{ 0.638645f, 0.062230f, -0.113159f },	{ 0.465993f, 1.766420f, 0.000000f },	{ -0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.648686f, 0.073606f, -0.348690f },	{ 0.627475f, -0.230973f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.648686f, 0.062230f, -0.348690f },	{ 0.711016f, -0.230973f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
};
#define _WoodenBeamsExtraFront_vertices_
#endif
#ifndef _WoodenBeamsExtraFront_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int WoodenBeamsExtraFront_indices[84] =
{
	 0, 1, 2,
	 3, 4, 5,
	 6, 7, 8,
	 9, 10, 11,
	 12, 13, 14,
	 15, 16, 17,
	 18, 19, 20,
	 21, 22, 23,
	 24, 25, 26,
	 27, 28, 29,
	 30, 31, 32,
	 33, 34, 35,
	 36, 37, 38,
	 39, 40, 41,
	 42, 43, 44,
	 45, 46, 47,
	 6, 8, 48,
	 9, 11, 49,
	 12, 14, 50,
	 15, 17, 51,
	 18, 20, 52,
	 21, 23, 53,
	 24, 26, 54,
	 27, 29, 55,
	 30, 32, 56,
	 33, 35, 57,
	 36, 38, 58,
	 39, 41, 59,
};
#define _WoodenBeamsExtraFront_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _WoodenBeamsExtraFront_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL WoodenBeamsExtraFront_materials[1] =
{
	{
		{{ 0.800000f, 0.800000f, 0.800000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		225.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		1},
		"Wood.002",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _WoodenBeamsExtraFront_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _WoodenBeamsExtraFront_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int WoodenBeamsExtraFront_batches[1][2] =
{
	{ 84, 0 },
};
#define _WoodenBeamsExtraFront_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _WoodenBeamsExtraFront_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH WoodenBeamsExtraFront_meshes[1] =
{
	{
		"default",
		84,
		0,
		0,
	},
};
#define _WoodenBeamsExtraFront_meshes_
#endif
