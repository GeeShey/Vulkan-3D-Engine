// "WoodenBeamsExtraBack.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "WoodenBeamsExtraBack.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _WoodenBeamsExtraBack_version_
const char WoodenBeamsExtraBack_version[4] = { '0','1','9','d' };
#define _WoodenBeamsExtraBack_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _WoodenBeamsExtraBack_vertexcount_
const unsigned WoodenBeamsExtraBack_vertexcount = 104;
#define _WoodenBeamsExtraBack_vertexcount_
#endif
#ifndef _WoodenBeamsExtraBack_indexcount_
const unsigned WoodenBeamsExtraBack_indexcount = 144;
#define _WoodenBeamsExtraBack_indexcount_
#endif
#ifndef _WoodenBeamsExtraBack_materialcount_
const unsigned WoodenBeamsExtraBack_materialcount = 1; // can be used for batched draws
#define _WoodenBeamsExtraBack_materialcount_
#endif
#ifndef _WoodenBeamsExtraBack_meshcount_
const unsigned WoodenBeamsExtraBack_meshcount = 1;
#define _WoodenBeamsExtraBack_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _WoodenBeamsExtraBack_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT WoodenBeamsExtraBack_vertices[104] =
{
	{	{ 0.259276f, 0.068542f, -0.109360f },	{ 0.000112f, 0.687457f, 0.000000f },	{ -0.002100f, 0.042800f, 0.999100f }	},
	{	{ 0.259276f, 0.101143f, -0.110755f },	{ 0.000112f, 0.999888f, 0.000000f },	{ -0.002100f, 0.042800f, 0.999100f }	},
	{	{ 0.147456f, 0.078608f, -0.110025f },	{ 0.999835f, 0.906629f, 0.000000f },	{ -0.002100f, 0.042800f, 0.999100f }	},
	{	{ 0.259276f, 0.068542f, -0.101518f },	{ 0.000112f, 0.687233f, 0.000000f },	{ -0.004200f, 0.104800f, -0.994500f }	},
	{	{ 0.147456f, 0.068178f, -0.101083f },	{ 0.999811f, 0.568135f, 0.000000f },	{ -0.004200f, 0.104800f, -0.994500f }	},
	{	{ 0.147456f, 0.078608f, -0.099984f },	{ 0.999888f, 0.467684f, 0.000000f },	{ -0.004200f, 0.104800f, -0.994500f }	},
	{	{ 0.381544f, 0.062230f, -0.110025f },	{ 0.465998f, -0.230973f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.146013f, 0.062230f, -0.110024f },	{ 0.465993f, 1.766420f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.146013f, 0.073606f, -0.110024f },	{ 0.549534f, 1.766420f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.381544f, 0.062230f, -0.110025f },	{ 0.465998f, -0.230973f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.381544f, 0.062230f, -0.099984f },	{ 0.388279f, -0.230974f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.146013f, 0.062230f, -0.099984f },	{ 0.388275f, 1.766420f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.381544f, 0.073606f, -0.110025f },	{ 0.549757f, -0.230973f, 0.000000f },	{ -0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.146013f, 0.073606f, -0.110024f },	{ 0.549758f, 1.766420f, 0.000000f },	{ -0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.146013f, 0.073606f, -0.099984f },	{ 0.627477f, 1.766420f, 0.000000f },	{ -0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.381544f, 0.073606f, -0.099984f },	{ 0.627475f, -0.230973f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.146013f, 0.073606f, -0.099984f },	{ 0.627477f, 1.766420f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.146013f, 0.062230f, -0.099984f },	{ 0.711014f, 1.766420f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.151199f, -0.056854f, -0.098155f },	{ 0.549275f, 1.068282f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.151199f, -0.056854f, -0.111198f },	{ 0.466600f, 1.068282f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.151199f, 0.076942f, -0.111198f },	{ 0.466601f, 0.176443f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.151199f, 0.076942f, -0.098155f },	{ 0.549276f, 0.176443f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.139687f, 0.076942f, -0.098155f },	{ 0.622247f, 0.176443f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.139687f, -0.056854f, -0.098155f },	{ 0.622245f, 1.068282f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.151199f, 0.076942f, -0.111198f },	{ 0.778038f, 0.176443f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.151199f, -0.056854f, -0.111198f },	{ 0.778036f, 1.068283f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.139687f, -0.056854f, -0.111198f },	{ 0.705066f, 1.068283f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.139687f, 0.076942f, -0.111198f },	{ 0.705067f, 0.176443f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.139687f, -0.056854f, -0.111198f },	{ 0.705066f, 1.068283f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.139687f, -0.056854f, -0.098155f },	{ 0.622391f, 1.068282f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.150304f, 0.062230f, 0.078858f },	{ 0.465998f, -0.230973f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.150303f, 0.062230f, -0.106491f },	{ 0.465993f, 1.766420f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.150303f, 0.073606f, -0.106491f },	{ 0.549534f, 1.766420f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.150304f, 0.062230f, 0.078858f },	{ 0.465998f, -0.230973f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.140263f, 0.062230f, 0.078858f },	{ 0.388279f, -0.230974f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.140263f, 0.062230f, -0.106491f },	{ 0.388275f, 1.766420f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.150303f, 0.073606f, -0.106491f },	{ 0.549758f, 1.766420f, 0.000000f },	{ -0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.140263f, 0.073606f, -0.106491f },	{ 0.627477f, 1.766420f, 0.000000f },	{ -0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.140263f, 0.073606f, 0.078858f },	{ 0.627475f, -0.230973f, 0.000000f },	{ -0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.140263f, 0.073606f, 0.078858f },	{ 0.627475f, -0.230973f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.140263f, 0.073606f, -0.106491f },	{ 0.627477f, 1.766420f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.140263f, 0.062230f, -0.106491f },	{ 0.711014f, 1.766420f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.151199f, -0.056854f, 0.087018f },	{ 0.396072f, 1.068282f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.151199f, -0.056854f, 0.073976f },	{ 0.313398f, 1.068282f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.151199f, 0.076942f, 0.073976f },	{ 0.313399f, 0.176443f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.151199f, 0.076942f, 0.087018f },	{ 0.396074f, 0.176443f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.139687f, 0.076942f, 0.087018f },	{ 0.469044f, 0.176443f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.139687f, -0.056854f, 0.087019f },	{ 0.469043f, 1.068282f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.151199f, 0.076942f, 0.073976f },	{ 0.624835f, 0.176443f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.151199f, -0.056854f, 0.073976f },	{ 0.624834f, 1.068283f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.139687f, -0.056854f, 0.073976f },	{ 0.551864f, 1.068283f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.139687f, 0.076942f, 0.073976f },	{ 0.551864f, 0.176443f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.139687f, -0.056854f, 0.073976f },	{ 0.551864f, 1.068283f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.139687f, -0.056854f, 0.087019f },	{ 0.469189f, 1.068282f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.381544f, 0.062230f, 0.075149f },	{ 0.465998f, -0.230973f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.146013f, 0.062230f, 0.075150f },	{ 0.465993f, 1.766420f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.146013f, 0.073606f, 0.075150f },	{ 0.549534f, 1.766420f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.381544f, 0.062230f, 0.075149f },	{ 0.465998f, -0.230973f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.381544f, 0.062230f, 0.085190f },	{ 0.388279f, -0.230974f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.146013f, 0.062230f, 0.085190f },	{ 0.388275f, 1.766420f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.381544f, 0.073606f, 0.075149f },	{ 0.549757f, -0.230973f, 0.000000f },	{ -0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.146013f, 0.073606f, 0.075150f },	{ 0.549758f, 1.766420f, 0.000000f },	{ -0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.146013f, 0.073606f, 0.085190f },	{ 0.627477f, 1.766420f, 0.000000f },	{ -0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.381544f, 0.073606f, 0.085190f },	{ 0.627475f, -0.230973f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.146013f, 0.073606f, 0.085190f },	{ 0.627477f, 1.766420f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.146013f, 0.062230f, 0.085190f },	{ 0.711014f, 1.766420f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.259276f, 0.068542f, 0.075814f },	{ 0.000112f, 0.687457f, 0.000000f },	{ -0.002100f, 0.042800f, 0.999100f }	},
	{	{ 0.259276f, 0.101143f, 0.074419f },	{ 0.000112f, 0.999888f, 0.000000f },	{ -0.002100f, 0.042800f, 0.999100f }	},
	{	{ 0.147456f, 0.078608f, 0.075149f },	{ 0.999835f, 0.906629f, 0.000000f },	{ -0.002100f, 0.042800f, 0.999100f }	},
	{	{ 0.259276f, 0.068542f, 0.083656f },	{ 0.000112f, 0.687233f, 0.000000f },	{ -0.004200f, 0.104800f, -0.994500f }	},
	{	{ 0.147456f, 0.068178f, 0.084091f },	{ 0.999811f, 0.568135f, 0.000000f },	{ -0.004200f, 0.104800f, -0.994500f }	},
	{	{ 0.147456f, 0.078608f, 0.085190f },	{ 0.999888f, 0.467684f, 0.000000f },	{ -0.004200f, 0.104800f, -0.994500f }	},
	{	{ 0.259276f, 0.068542f, -0.109360f },	{ 0.000112f, 0.687457f, 0.000000f },	{ 0.003500f, 0.104800f, 0.994500f }	},
	{	{ 0.147456f, 0.078608f, -0.110025f },	{ 0.999835f, 0.906629f, 0.000000f },	{ 0.003500f, 0.104800f, 0.994500f }	},
	{	{ 0.147456f, 0.068178f, -0.108925f },	{ 0.999856f, 0.806178f, 0.000000f },	{ 0.003500f, 0.104800f, 0.994500f }	},
	{	{ 0.259276f, 0.068542f, -0.101518f },	{ 0.000112f, 0.687233f, 0.000000f },	{ -0.011500f, 0.024600f, -0.999600f }	},
	{	{ 0.147456f, 0.078608f, -0.099984f },	{ 0.999888f, 0.467684f, 0.000000f },	{ -0.011500f, 0.024600f, -0.999600f }	},
	{	{ 0.259276f, 0.101143f, -0.100714f },	{ 0.000112f, 0.375007f, 0.000000f },	{ -0.011500f, 0.024600f, -0.999600f }	},
	{	{ 0.381544f, 0.073606f, -0.110025f },	{ 0.549536f, -0.230973f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.146013f, 0.062230f, -0.110024f },	{ 0.465993f, 1.766420f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.381544f, 0.073606f, -0.099984f },	{ 0.627475f, -0.230973f, 0.000000f },	{ -0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.381544f, 0.062230f, -0.099984f },	{ 0.711016f, -0.230973f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.151199f, 0.076942f, -0.098155f },	{ 0.549276f, 0.176443f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.151199f, -0.056854f, -0.098155f },	{ 0.549275f, 1.068282f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.139687f, 0.076942f, -0.111198f },	{ 0.705067f, 0.176443f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.139687f, 0.076942f, -0.098155f },	{ 0.622392f, 0.176443f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.150304f, 0.073606f, 0.078858f },	{ 0.549536f, -0.230973f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.150303f, 0.062230f, -0.106491f },	{ 0.465993f, 1.766420f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.150304f, 0.073606f, 0.078858f },	{ 0.549757f, -0.230973f, 0.000000f },	{ -0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.140263f, 0.062230f, 0.078858f },	{ 0.711016f, -0.230973f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.151199f, 0.076942f, 0.087018f },	{ 0.396074f, 0.176443f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.151199f, -0.056854f, 0.087018f },	{ 0.396072f, 1.068282f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.139687f, 0.076942f, 0.073976f },	{ 0.551864f, 0.176443f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.139687f, 0.076942f, 0.087018f },	{ 0.469190f, 0.176443f, 0.000000f },	{ -1.000000f, -0.000000f, 0.000000f }	},
	{	{ 0.381544f, 0.073606f, 0.075149f },	{ 0.549536f, -0.230973f, 0.000000f },	{ -0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.146013f, 0.062230f, 0.075150f },	{ 0.465993f, 1.766420f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.381544f, 0.073606f, 0.085190f },	{ 0.627475f, -0.230973f, 0.000000f },	{ -0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.381544f, 0.062230f, 0.085190f },	{ 0.711016f, -0.230973f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.259276f, 0.068542f, 0.075814f },	{ 0.000112f, 0.687457f, 0.000000f },	{ 0.003500f, 0.104800f, 0.994500f }	},
	{	{ 0.147456f, 0.078608f, 0.075149f },	{ 0.999835f, 0.906629f, 0.000000f },	{ 0.003500f, 0.104800f, 0.994500f }	},
	{	{ 0.147456f, 0.068178f, 0.076249f },	{ 0.999856f, 0.806178f, 0.000000f },	{ 0.003500f, 0.104800f, 0.994500f }	},
	{	{ 0.259276f, 0.068542f, 0.083656f },	{ 0.000112f, 0.687233f, 0.000000f },	{ -0.011500f, 0.024600f, -0.999600f }	},
	{	{ 0.147456f, 0.078608f, 0.085190f },	{ 0.999888f, 0.467684f, 0.000000f },	{ -0.011500f, 0.024600f, -0.999600f }	},
	{	{ 0.259276f, 0.101143f, 0.084460f },	{ 0.000112f, 0.375007f, 0.000000f },	{ -0.011500f, 0.024600f, -0.999600f }	},
};
#define _WoodenBeamsExtraBack_vertices_
#endif
#ifndef _WoodenBeamsExtraBack_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int WoodenBeamsExtraBack_indices[144] =
{
	 0, 1, 2,
	 3, 4, 5,
	 6, 7, 8,
	 9, 10, 11,
	 12, 13, 14,
	 15, 16, 17,
	 18, 19, 20,
	 21, 22, 23,
	 24, 25, 26,
	 27, 28, 29,
	 30, 31, 32,
	 33, 34, 35,
	 36, 37, 38,
	 39, 40, 41,
	 42, 43, 44,
	 45, 46, 47,
	 48, 49, 50,
	 51, 52, 53,
	 54, 55, 56,
	 57, 58, 59,
	 60, 61, 62,
	 63, 64, 65,
	 66, 67, 68,
	 69, 70, 71,
	 72, 73, 74,
	 75, 76, 77,
	 6, 8, 78,
	 9, 11, 79,
	 12, 14, 80,
	 15, 17, 81,
	 18, 20, 82,
	 21, 23, 83,
	 24, 26, 84,
	 27, 29, 85,
	 30, 32, 86,
	 33, 35, 87,
	 36, 38, 88,
	 39, 41, 89,
	 42, 44, 90,
	 45, 47, 91,
	 48, 50, 92,
	 51, 53, 93,
	 54, 56, 94,
	 57, 59, 95,
	 60, 62, 96,
	 63, 65, 97,
	 98, 99, 100,
	 101, 102, 103,
};
#define _WoodenBeamsExtraBack_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _WoodenBeamsExtraBack_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL WoodenBeamsExtraBack_materials[1] =
{
	{
		{{ 0.800000f, 0.800000f, 0.800000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		225.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		1},
		"Wood.002",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _WoodenBeamsExtraBack_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _WoodenBeamsExtraBack_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int WoodenBeamsExtraBack_batches[1][2] =
{
	{ 144, 0 },
};
#define _WoodenBeamsExtraBack_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _WoodenBeamsExtraBack_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH WoodenBeamsExtraBack_meshes[1] =
{
	{
		"default",
		144,
		0,
		0,
	},
};
#define _WoodenBeamsExtraBack_meshes_
#endif
